# To build and deploy to Cloud Run, run from this directory:  
# $ gcloud builds submit app --config=cloudbuild.yaml
steps:
  # Build app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '.', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python:${COMMIT_SHA}', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python','-f', 'Dockerfile']
    dir: 'app'  
    id: build
  # Run unit tests
  - name: us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python
    entrypoint: python
    args: ["-m","pytest","unit_tests.py"]
    dir: 'app'
    id: test
  # Verify code with sonarqube - Quality gate
  - name: 'us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/sonar-scanner:latest'
    entrypoint: 'bash'
    args:
    - -c
    - sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$$SONAR_TOKEN -Dsonar.projectKey=$$SONAR_PROJECT_KEY -Dsonar.organization=$$SONAR_ORG -Dsonar.sources=./app -Dsonar.qualitygate.wait=false
    secretEnv: ['SONAR_TOKEN','SONAR_ORG','SONAR_PROJECT_KEY']
    id: quality
  # Push docker image and save image digest for kritis check
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python:${COMMIT_SHA}']
    id: push
  # Atestation
  - id: 'create-attestation'
  name: 'gcr.io/${PROJECT_ID}/binauthz-attestation:latest'
  args:
    - '--artifact-url'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python:${COMMIT_SHA}'
    - '--attestor'
    - 'attestor-cicddemo'
    - '--attestor-project'
    - '${PROJECT_ID}'
    - '--keyversion'
    - 'KEY_VERSION'
    - '--keyversion-project'
    - '${PROJECT_ID}'
    - '--keyversion-location'
    - 'global'
    - '--keyversion-keyring'
    - 'cicddemo-keyring'
    - '--keyversion-key'
    - '1'
  # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args: 
      [
        "beta", "deploy", "releases", "create", "rel-${SHORT_SHA}",
        "--delivery-pipeline", "hello-world-python-pipeline",
        "--region", "us-central1",
        "--annotations", "commitId=${REVISION_ID}",
        "--images", "hello-world-python=us-central1-docker.pkg.dev/$PROJECT_ID/hello-world-python/hello-world-python:${COMMIT_SHA}"
      ]
    id: deploy
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/sonar_token/versions/1
    env: 'SONAR_TOKEN'
  - versionName: projects/$PROJECT_ID/secrets/sonar_org/versions/1
    env: 'SONAR_ORG'
  - versionName: projects/$PROJECT_ID/secrets/sonar_project_key/versions/1
    env: 'SONAR_PROJECT_KEY'